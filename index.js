// Generated by CoffeeScript 1.10.0
(function() {
  var Promise, _exec, debug, pkg,
    slice = [].slice;

  module.exports = function() {
    return function() {
      var arg, args, cmd, fail_if_stderr, i, len, options;
      cmd = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      fail_if_stderr = false;
      options = {};
      for (i = 0, len = args.length; i < len; i++) {
        arg = args[i];
        switch (typeof arg) {
          case 'boolean':
            fail_if_stderr = arg;
            break;
          case 'object':
            options = arg;
            break;
          default:
            throw new Error("Invalid " + (typeof arg) + " argument");
        }
      }
      debug("Executing", {
        cmd: cmd,
        options: options
      });
      return _exec(cmd, options).then(function(arg1) {
        var stderr, stdout;
        stdout = arg1[0], stderr = arg1[1];
        debug('Command returned', {
          cmd: cmd,
          stdout: stdout,
          stderr: stderr
        });
        if (stderr && fail_if_stderr) {
          return Promise.reject(new Error(stderr));
        } else {
          return stdout;
        }
      })["catch"](function(error) {
        debug(cmd + " failed: " + error);
        return Promise.reject(error);
      });
    };
  };

  Promise = require('bluebird');

  _exec = Promise.promisify((require('child_process')).exec, {
    multiArgs: true
  });

  pkg = require('./package');

  debug = (require('debug'))(pkg.name);

}).call(this);
